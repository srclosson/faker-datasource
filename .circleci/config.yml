version: 2.1

aliases:
  # Workflow filters
  - &filter-only-master
    branches:
      only: master

executors:
  default_exec: # declares a reusable executor
    docker:
      - image: srclosson/grafana-plugin-ci:latest
      

jobs:
  compile_dependencies:
    executor: default_exec
    steps:
      - setup_remote_docker: 
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            mkdir ci
            [ -L ~/project/node_modules/.bin/grafana-toolkit ] || yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ~/.cache
            - ~/project/node_modules
          key: build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      
  build_plugin:
    executor: default_exec
    steps:
      - setup_remote_docker: 
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build and test frontend and docs
          command:  |
            npx grafana-toolkit plugin:ci-docs
            npx grafana-toolkit plugin:ci-build
            npx grafana-toolkit plugin:ci-build --finish
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_backend:
    executor: default_exec
    steps:
      - setup_remote_docker: 
          docker_layer_caching: true
      - checkout
      - run:
          name: Build Backend
          command: |
            [ -f "Magefile.go" ] && mage -v buildAll || circleci-agent step halt
      - run:
          name: Test Backend
          command: |
            mage -v lint
            mage -v coverage
      - run:
          name: Move results to ci folder
          command:  |
            npx grafana-toolkit plugin:ci-build --finish
      - persist_to_workspace:
          root: .
          paths:
            - ci
  
  package_and_report:
    executor: default_exec
    steps:
    - setup_remote_docker: 
        docker_layer_caching: true
    - checkout
    - restore_cache:
        keys:
        - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        name: Package distribution
        command: |
          npx grafana-toolkit plugin:ci-package
    - run:
        name: Toolkit report
        command: |
          npx grafana-toolkit plugin:ci-report
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/package
        - ci/packages
        - ci/dist
        - ci/grafana-test-env
    - store_artifacts:
        path: ci

  test_integration:
    executor: default_exec
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Setup Grafana (local install)
        command: |
          gget latest
          sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/conf/custom.ini
          sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
          sudo service grafana-server start
          sudo grafana-cli --version
    - run:
        name: Run e2e tests
        command: |
          [ -d "cypress" ] && npx grafana-e2e run || echo "skipping e2e"
    - run:
        name: Prepare task output dir
        command: |
          # TODO: probably move all of this to `@grafana/toolkit plugin:ci-test`
          mkdir ci/jobs/test_integration
          # only copy if they exist
          cp cypress/screenshots/*.* ci/jobs/test_integration 2>/dev/null || :
          cp cypress/videos/*.* ci/jobs/test_integration 2>/dev/null || :
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/test_integration
    - store_test_results:
        path: ci/jobs/test_integration
    - store_artifacts:
        path: ci/jobs/test_integration

  publish_github_release:
    executor: default_exec
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "dc:60:ab:c7:2d:8c:82:50:2a:2a:97:1a:c0:66:83:14"
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: "Publish Release on GitHub"
          command: |
            npx grafana-toolkit plugin:github-publish

workflows:
  version: 2
  plugin_workflow:
    jobs:
      - compile_dependencies
      - build_plugin:
          requires: 
            - compile_dependencies
      - build_backend:
          requires: 
            - compile_dependencies
      - package_and_report:
          requires:
            - build_plugin
            - build_backend
      - test_integration:
          requires:
            - package_and_report
      - approve_release:
          type: approval
          requires:
            - test_integration
          filters: *filter-only-master
      - publish_github_release:
          requires:
            - approve_release
          filters: *filter-only-master
